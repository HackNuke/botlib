#!/usr/bin/env python3
# This file is placed in the Public Domain.


import inspect
import os
import shutil
import sys
import time
import unittest


sys.path.insert(0, os.getcwd())


from ot.bus import Bus
from ot.cls import Cls
from ot.cmd import Cmd
from ot.cfg import Cfg
from ot.evt import Event
from ot.lop import Loop
from ot.dbs import find, fntime, last, listfiles, save
from ot.obj import Object, get, items, keys, values, update
from ot.fnc import edit, format, index
from ot.hdl import Handler
from ot.prs import elapsed, parse
from ot.tbl import Tbl
from ot.thr import getname, launch


import ot.all
import bot.all


Cfg.wd = ".test"


events = []
param = Object()
param.add = ["test@shell", "bart", ""]
param.cfg = ["server=localhost", ""]
param.dne = ["test4", ""]
param.rem = ["reddit", ""]
param.dpl = ["reddit title,summary,link", ""]
param.log = ["test1", ""]
param.flt = ["0", ""]
param.fnd = ["cfg", "log", "rss", "log txt==test", "cfg server==localhost", "rss rss==reddit"]
param.rss = ["https://www.reddit.com/r/python/.rss"]
param.tdo = ["test4", ""]
results = Object()
starttime = time.time()


class CLI(Handler):

    def raw(self, txt):
        index(results, txt)
        if Cfg.verbose:
            print(txt)


def consume(events):
    fixed = []
    res = []
    for e in events:
        e.wait()
        fixed.append(e)
    for f in fixed:
        try:
            events.remove(f)
        except ValueError:
            continue
    return res


def payload(c):
    for cmd in Cmd.cmds:
        for ex in getattr(param, cmd, [""]):
            e = Event()
            e.type = "cmd"
            e.txt = cmd + " " + ex
            e.orig = repr(c)
            launch(c.handle, e)
            events.append(e)


def scan():
    for mod in values(Tbl.mod):
        for k, o in inspect.getmembers(mod, inspect.isfunction):
            if "event" in o.__code__.co_varnames:
                Cmd.cmds[k] = o
        for k, clz in inspect.getmembers(mod, inspect.isclass):
            Cls.add(clz)
        Tbl.add(mod)


def main():
    print("BOT tinder start at %s" % time.ctime(time.time()).replace("  ", " "))
    if os.path.exists(Cfg.wd):
        shutil.rmtree(Cfg.wd)
    scan()
    parse(Cfg, " ".join(sys.argv[1:]))
    Cfg.verbose = "v" in Cfg.opts
    Cfg.debug = True
    c = CLI()
    c.start()
    thrs = []
    nrs = Cfg.index or 1
    for nr in range(nrs):
        thr = launch(payload, c)
        thrs.append(thr)
    #for thr in thrs
    #    print(thr.join())
    consume(events)
    print("%s loops in %s" % (nrs, elapsed(time.time()-starttime)))


main()
