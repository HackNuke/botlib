#!/usr/bin/env python3
# This file is placed in the Public Domain.


import inspect
import os
import sys
import termios
import time
import traceback

sys.path.insert(0, "lib")
sys.path.insert(0, os.getcwd())


from obj import Object
from odb import Cfg
from otb import Cls, Cmd, Obj
from oev import Event
from ofn import fmt
from opr import parse
from ohd import Handler
from otm import tfmt
from oth import launch


from bot.irc import IRC


import bot.bsc
import bot.irc


Cfg.wd = os.path.expanduser("~/.bot")


class Console(Handler):

    def cmd(self, txt):
        e = Event()
        e.channel = ""
        e.orig = repr(self)
        e.txt = txt
        self.handle(e)

    def poll(self):
        e = Event()
        e.orig = repr(self)
        e.txt = input("> ")
        return e
 
    def raw(self, txt):
        print(txt)


def scan(mod):
    for k, o in inspect.getmembers(mod, inspect.isfunction):
         if "event" in o.__code__.co_varnames:
             Cmd.cmds[k] = o
    for k, clz in inspect.getmembers(mod, inspect.isclass):
       Cls.add(clz)


def wrap(func):
    fd = sys.stdin.fileno()
    old = termios.tcgetattr(fd)
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print("")
    finally:
        termios.tcsetattr(fd, termios.TCSADRAIN, old)


def main():
    scan(bot.bsc)
    scan(bot.irc)
    txt = " ".join(sys.argv[1:])
    p = Object()
    parse(p, txt)
    c = Console()
    if "c" in p.opts:
        c.start()
        i = IRC()
        i.start()
        c.wait()
        return
    c.cmd(txt)


wrap(main)
