#!/usr/bin/env python3
# This file is placed in the Public Domain.


"reverse bot"


import inspect
import os
import readline
import sys
import termios
import time
import traceback


sys.path.insert(0, os.getcwd())


from ot.cls import Cls
from ot.cmd import Cmd
from ot.obj import Object, update, values
from ot.cfg import Cfg
from ot.dft import Default
from ot.evt import Event
from ot.prs import parse
from ot.hdl import Handler
from ot.tbl import Tbl
from ot.tms import tfmt
from ot.thr import launch


import bot.all


from bot.irc import IRC
from bot.rss import Fetcher


Cfg.wd = os.path.expanduser("~/.bot")


class Cfg(Default):

    pass


class Console(Handler):

    def __init__(self):
        Handler.__init__(self)
        self.cfg = Cfg()

    def boot(self):
        return parse(self.cfg, " ".join(sys.argv[1:]))

    def cmd(self, txt):
        e = Event()
        e.channel = ""
        e.orig = repr(self)
        e.txt = txt
        self.handle(e)

    def poll(self):
        e = Event()
        e.orig = repr(self)
        e.txt = input("> ")
        return e
 
    def raw(self, txt):
        print(txt)


def scan():
    for mod in values(Tbl.mod):
        for k, o in inspect.getmembers(mod, inspect.isfunction):
            if "event" in o.__code__.co_varnames:
                Cmd.cmds[k] = o
        for k, clz in inspect.getmembers(mod, inspect.isclass):
            Cls.add(clz)
        Tbl.add(mod)


def wrap(func):
    fd = sys.stdin.fileno()
    old = termios.tcgetattr(fd)
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print("")
    finally:
        termios.tcsetattr(fd, termios.TCSADRAIN, old)


def main():
    scan()
    c = Console()
    c.boot()
    i = IRC()
    i.start()
    f = Fetcher()
    f.start()
    c.start()
    c.wait()


wrap(main)
