#!/usr/bin/env python3
# This file is placed in the Public Domain.

"python3 object library"

import os,sys ; sys.path.insert(0, os.getcwd())

import atexit
import doctest
import ob
import os
import readline
import shutil
import sys
import termios
import unittest

ob.wd = ".test"

from ob import Kernel, Handler

flags = doctest.REPORT_NDIFF|doctest.FAIL_FAST|doctest.ELLIPSIS
k = Kernel()
k.cfg.debug = True
k.cfg.verbose = True
k.cfg.p = "bot"
resume = {}

def error(h, e):
    print(e)

class Test(Handler):

    def handle(self, e):
        k.put(e)

    def raw(self, txt):
        if k.opts("v"):
            print(txt)

def termsetup(fd):
    return termios.tcgetattr(fd)

def termreset():
    if "old" in resume:
        try:
            termios.tcsetattr(resume["fd"], termios.TCSADRAIN, resume["old"])
        except termios.error:
            pass

def termsave():
    try:
        resume["fd"] = sys.stdin.fileno()
        resume["old"] = termsetup(sys.stdin.fileno())
        atexit.register(termreset)
    except termios.error:
        pass

def wrap(func):
    termsave()
    try:
        func()
    except KeyboardInterrupt:
        pass
    finally:
        termreset()

def main():
    if os.path.exists(".test"):
        shutil.rmtree(".test")
    k.error = error
    k.start()
    c = Test()
    c.start()
    pat = "test_%s*" % "*"
    suite = unittest.loader.TestLoader().discover("test", pattern=pat)
    unittest.TextTestRunner(verbosity=3).run(suite)
    doctest.testfile("../test/test1.txt", optionflags=flags, report=False, verbose=False)

wrap(main)
