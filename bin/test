#!/usr/bin/python3
#
# run unittests.

__version__ = 1

import os,sys ; sys.path.insert(0, os.getcwd())

import logging, os, shutil, time, unittest, ok.obj, bot.rss

from ok.obj import cdir, starttime
from ok.krn import get_kernel
from ok.shl import execute
from ok.tms import elapsed

opts = [
    ('-b', '--bork', 'store_true', False, 'bork on exception.', 'bork'),
    ('-v', '--verbose', 'store_true', False, 'enable verbose mode.', 'verbose'),
    ('-m', '--modules', 'store', str, "bot.mods", 'modules to load.', 'modules'),
    ('-o', '--options', 'store', str, "", 'options to use.', 'options'),
    ('-w', '--workdir', 'store', str, ".data", 'set working directory.', 'workdir'),
    ('-l', '--loglevel', 'store', str, "error", 'set loglevel.', 'level'),
]

resume = {}

def main():
    try:
        shutil.rmtree(".data")
    except FileNotFoundError:
        pass
    cdir(".data")
    ok.obj.workdir = ".data"
    bot.rss.debug = True
    k = get_kernel()
    k.start()
    k.walk("ok,bot")
    test_path = os.getcwd() + os.sep + "tests"
    suite = unittest.loader.TestLoader().discover(test_path, pattern="test*")
    unittest.TextTestRunner(verbosity=3).run(suite)
    k.wait()
   
execute(main)
print(elapsed(time.time() - starttime))
os._exit(0)
