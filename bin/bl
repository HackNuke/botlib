#!/usr/bin/python3 -u
# BOTLIB - Framework to program bots.
#
# 

import os, sys ; sys.path.insert(0, os.getcwd())

import bl

bl.evt.aliases = {
           "cmds": "show cmds",
           "f": "find",
           "l": "log",
           "ps": "show tasks",
           "t": "todo",
           "u": "show uptime",
           "v": "show version"
           }

opts = [
    ('-b', '--background', 'store_true', False, 'run in daemon mode.', 'daemon'),
    ('-d', '--datadir', 'store', str, 'set working directory.', 'workdir'),
    ('-m', '--modules', 'store', str, 'modules to load.', 'modules'),
    ('-x', '--exec', 'store_true', False, 'execute command.', 'doexec'),
    ('-o', '--options', "store", str, "options to use.", 'options'),
    ('-k', '--kernel', "store_true", False, "read from previous kernel config.", 'kernel'),
    ('-p', '--prompting', "store_false", True, "disable prompting for initial values.", 'prompting'),
    ('-s', '--save', 'store_true', False, 'save configuration files.', 'dosave'),
    ('-z', '--shell', 'store_true', False, 'disable shell.', 'shell'),
    ('-e', '--exclude', 'store', str, 'exclude modules.', 'exclude'),
    ('-l', '--loglevel', 'store', str, 'set loglevel.', 'level'),
    ('-a', '--logdir', "store", str, "directory to find the logfiles.", 'logdir'),
    ('-v', '--verbose', 'store_true', False, 'enable verbose mode.', 'verbose')
]

def daemon():
    pid = os.fork()
    if pid != 0:
        bl.trm.reset()
        os._exit(0)
    os.setsid()
    os.umask(0)
    si = open("/dev/null", 'r')
    so = open("/dev/null", 'a+')
    se = open("/dev/null", 'a+')
    os.dup2(si.fileno(), sys.stdin.fileno())
    os.dup2(so.fileno(), sys.stdout.fileno())
    os.dup2(se.fileno(), sys.stderr.fileno())

def main():
    bl.shl.parse_cli("bl", bl.__version__, opts)
    if not bl.k.cfg.modules:
        bl.k.cfg.modules = "irc,shw,ent,rss,udp" 
    if bl.k.cfg.daemon:
        bl.k.cfg.kernel = True
        daemon()
    bl.k.start()
    bl.k.wait()

bl.shl.execute(main)
os._exit(0)
